{"ast":null,"code":"var _jsxFileName = \"/home/hieund/EmployeeManager/employee-management-system/src/Page/Dashboard/Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Edit(_ref) {\n  _s();\n\n  let {\n    employees,\n    selectedEmployee,\n    setEmployees,\n    setIsEditing\n  } = _ref;\n  const id = selectedEmployee.id;\n  const [firstName, setFirstName] = useState(selectedEmployee.firstName);\n  const [lastName, setLastName] = useState(selectedEmployee.lastName);\n  const [email, setEmail] = useState(selectedEmployee.email);\n  const [salary, setSalary] = useState(selectedEmployee.salary);\n  const [date, setDate] = useState(selectedEmployee.date);\n\n  const handleUpdate = e => {\n    e.preventDefault();\n\n    if (!firstName || !lastName || !email || !salary || !date) {\n      return Swal.fire({\n        icon: 'error',\n        title: 'Error!',\n        text: 'All fields are required.',\n        showConfirmButton: true\n      });\n    }\n\n    const employee = {\n      id,\n      firstName,\n      lastName,\n      email,\n      salary,\n      date\n    };\n\n    for (let i = 0; i < employees.length; i++) {\n      if (employees[i].id === id) {\n        employees.splice(i, 1, employee);\n        break;\n      }\n    }\n\n    setEmployees(employees);\n    setIsEditing(false);\n    Swal.fire({\n      icon: 'success',\n      title: 'Updated!',\n      text: `${employee.firstName} ${employee.lastName}'s data has been updated.`,\n      showConfirmButton: false,\n      timer: 1500\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"small-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"firstName\",\n        type: \"text\",\n        name: \"firstName\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"lastName\",\n        type: \"text\",\n        name: \"lastName\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"salary\",\n        children: \"Salary ($)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"salary\",\n        type: \"number\",\n        name: \"salary\",\n        value: salary,\n        onChange: e => setSalary(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginLeft: '12px'\n          },\n          className: \"muted-button\",\n          type: \"button\",\n          value: \"Cancel\",\n          onClick: () => setIsEditing(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Edit, \"rBcT6P2o2xchQyt2o8rgBMWd3Uc=\");\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","Swal","Edit","employees","selectedEmployee","setEmployees","setIsEditing","id","firstName","setFirstName","lastName","setLastName","email","setEmail","salary","setSalary","date","setDate","handleUpdate","e","preventDefault","fire","icon","title","text","showConfirmButton","employee","i","length","splice","timer","target","value","marginTop","marginLeft"],"sources":["/home/hieund/EmployeeManager/employee-management-system/src/Page/Dashboard/Edit.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Swal from 'sweetalert2';\n\nfunction Edit({ employees, selectedEmployee, setEmployees, setIsEditing }) {\n\n    const id = selectedEmployee.id;\n\n    const [firstName, setFirstName] = useState(selectedEmployee.firstName);\n    const [lastName, setLastName] = useState(selectedEmployee.lastName);\n    const [email, setEmail] = useState(selectedEmployee.email);\n    const [salary, setSalary] = useState(selectedEmployee.salary);\n    const [date, setDate] = useState(selectedEmployee.date);\n\n    const handleUpdate = e => {\n        e.preventDefault();\n\n        if (!firstName || !lastName || !email || !salary || !date) {\n            return Swal.fire({\n                icon: 'error',\n                title: 'Error!',\n                text: 'All fields are required.',\n                showConfirmButton: true\n            });\n        }\n\n        const employee = {\n            id,\n            firstName,\n            lastName,\n            email,\n            salary,\n            date\n        };\n\n        for (let i = 0; i < employees.length; i++) {\n            if (employees[i].id === id) {\n                employees.splice(i, 1, employee);\n                break;\n            }\n        }\n\n        setEmployees(employees);\n        setIsEditing(false);\n\n        Swal.fire({\n            icon: 'success',\n            title: 'Updated!',\n            text: `${employee.firstName} ${employee.lastName}'s data has been updated.`,\n            showConfirmButton: false,\n            timer: 1500\n        });\n    };\n\n    return (\n        <div className=\"small-container\">\n            <form onSubmit={handleUpdate}>\n                <h1>Edit Employee</h1>\n                <label htmlFor=\"firstName\">First Name</label>\n                <input\n                    id=\"firstName\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    value={firstName}\n                    onChange={e => setFirstName(e.target.value)}\n                />\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input\n                    id=\"lastName\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    value={lastName}\n                    onChange={e => setLastName(e.target.value)}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <input\n                    id=\"email\"\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                />\n                <label htmlFor=\"salary\">Salary ($)</label>\n                <input\n                    id=\"salary\"\n                    type=\"number\"\n                    name=\"salary\"\n                    value={salary}\n                    onChange={e => setSalary(e.target.value)}\n                />\n                <label htmlFor=\"date\">Date</label>\n                <input\n                    id=\"date\"\n                    type=\"date\"\n                    name=\"date\"\n                    value={date}\n                    onChange={e => setDate(e.target.value)}\n                />\n                <div style={{ marginTop: '30px' }}>\n                    <input type=\"submit\" value=\"Update\" />\n                    <input\n                        style={{ marginLeft: '12px' }}\n                        className=\"muted-button\"\n                        type=\"button\"\n                        value=\"Cancel\"\n                        onClick={() => setIsEditing(false)}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Edit"],"mappings":"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"},"metadata":{},"sourceType":"module"}